name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build React app
        run: npm run build

      - name: Vérifier que le dossier build existe
        run: |
          echo "Contenu du dossier build/"
          ls -al build || { echo "Le dossier build est introuvable !"; exit 1; }

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: build/

  build_and_push_docker_image:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: react-build
          path: build/

      - name: Vérifier que l'artefact a bien été téléchargé
        run: |
          echo "Contenu du dossier build/ téléchargé"
          ls -al build || { echo "Erreur: le dossier build/ est vide ou manquant."; exit 1; }

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            presta-express:${{ github.sha }}
            presta-express:latest
          cache-from: type=registry,ref=presta-express:cache

  deploy:
    needs: build_and_push_docker_image
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy to server
        run: |
          echo "Déploiement de l'image presta-express:${{ github.sha }} vers le serveur..."
          # Décommenter et adapter la ligne de déploiement selon votre cas :
          # ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
          # "docker pull presta-express:${{ github.sha }} && docker stop presta-express || true && docker rm presta-express || true && docker run -d --name presta-express -p 80:80 presta-express:${{ github.sha }}"
