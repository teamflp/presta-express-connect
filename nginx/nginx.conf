server {
    listen 80; # Écoute les requêtes sur le port 80 (HTTP)
    listen [::]:80; # Écoute les requêtes IPv6 sur le port 80

    server_name localhost; # Peut être remplacé par votre nom de domaine en production

    # Définit la racine des fichiers de votre application construite
    root /usr/share/nginx/html;

    # Spécifie les fichiers d'index par défaut
    index index.html index.htm;

    # Configuration pour la compression Gzip (réduit la taille des fichiers transférés)
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types application/javascript application/x-javascript text/css image/svg+xml application/json application/xml text/xml text/plain text/uri-list;
    gzip_disable "MSIE [1-6]\."; # Désactive gzip pour les anciens navigateurs IE

    # Gestion des en-têtes CORS (Cross-Origin Resource Sharing)
    # C'est souvent nécessaire si  l'API est sur un domaine différent
    # ou si vous avez des polices ou des ressources chargées depuis un autre domaine.
    # A décommenter et ajuster selon les besoins réels
    # add_header 'Access-Control-Allow-Origin' '*';
    # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    # add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
    # add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

    # Cache de l'application (pour les fichiers statiques)
    location ~* \.(?:css|js|jpg|jpeg|gif|png|ico|svg|eot|otf|ttf|woff|woff2)$ {
        expires 1y; # Les fichiers seront mis en cache par le navigateur pendant 1 an
        add_header Cache-Control "public"; # Indique que le cache peut être public (par les proxys)
        # Optionnel: Supprime la gestion des logs d'accès pour ces fichiers pour réduire le bruit
        access_log off;
        log_not_found off;
    }

    # Cache des fichiers HTML
    location ~* \.(?:html|htm)$ {
        expires -1; # Les fichiers HTML expirent immédiatement pour toujours obtenir la dernière version
        add_header Cache-Control "no-cache, no-store, must-revalidate"; # Ne pas mettre en cache
    }

    # Configuration essentielle pour les Single Page Applications (SPA) comme React
    # Tente de servir le fichier demandé directement.
    # S'il n'existe pas, tente de servir un répertoire.
    # Si cela échoue aussi, renvoie sur /index.html.
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Gestion des erreurs personnalisées (optionnel)
    # Par exemple, pour renvoyer votre page 404 de React pour toutes les erreurs non gérées par try_files
    error_page 404 /index.html; # Redirige les erreurs 404 vers votre page d'accueil (React gérera le routage interne)
    # error_page 500 502 503 504 /50x.html; # Pour des pages d'erreur serveur spécifiques si on en a
    # location = /50x.html {
    #     root /usr/share/nginx/html;
    # }
}